[예외처리] : 문제가 생길만한 지점을 예상하여 어떻게 처리할지 프로그래밍하는 것

- 자바에서는 예외를 객체로 취급하며, 예외 발생 시, 예외객체가 자동 생성.

예외의 필요성 : 어느 한 부분에서 예외가 발생하더라도 프로그램이 멈추지 않고 동작되도록 하는게 목적.


[문법]
1. try ~ catch

try : 예외가 발생할 가능성이 있는 명령문(문제가 발생할 수 있는 로직)
catch : 예외사항을 처리하는 명령문(try에서 발생한 문제에 대한 대처)
finally : 예외 발생 여부와 상관없이 맨 마지막에 실행할 명령문


2. throws

- 예외발생 시, 호출한 쪽으로 예외를 던지는 방식
- 강제로 예외 발생

[자주발생하는 예외]

- ArrayIndexOutOfboundsException : 배열 사용 시, 존재하지않는 index값을 호출 시 발생.

- NullPointerException : 존재하지 않는 객체를 가르킬 때 발생.

- NumberFormatException : 숫자로 변경할 수 없는 문자열을 변경하려 할때 발생.